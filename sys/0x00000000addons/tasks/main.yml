### 
- name: 0.Create addons directory
  file:
    path: "{{k8s_install_home}}/addons/{{item}}"
    state: directory
  with_items:
    - coredns
    - dashboard
    - metrics-server
    - heapster
    - helm
    - traefik
    - registry
    - temp



### 1.Deploy coredns
- name: 1.1 Create coredns.yaml file
  template:
    src: "../templates/1.coredns/coredns.yaml.j2"
    dest: "{{k8s_install_home}}/addons/coredns/coredns.yaml"
- name: 1.2 Deploy coredns
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig apply -f {{k8s_install_home}}/addons/coredns/coredns.yaml"

### 2.Deploy dashboard
### 2.部署dashboard
- name: 2.0 Clean up the kube-dashboard-admin left by historical installation
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig delete serviceaccounts dashboard-admin -n kube-system"
  ignore_errors: yes
- name: 2.1 Copy kube-dashboard file
  template:
    src: "../templates/2.dashboard/{{item}}.j2"
    dest: "{{k8s_install_home}}/addons/dashboard/{{item}}"
  with_items:
    - kubernetes-dashboard-deployment.yaml
    - kubernetes-dashboard-service.yaml
- copy:
    src: "../templates/2.dashboard/{{item}}"
    dest: "{{k8s_install_home}}/addons/dashboard/{{item}}"
  with_items:
    - kubernetes-dashboard-rbac-admin.yaml
    - kubernetes-dashboard-rbac-minimal.yaml
    - kubernetes-dashboard-secret.yaml
- copy:
    src: "../templates/2.dashboard/{{k8sdashboardshell}}.sh"
    dest: "{{k8s_install_home}}/temp/{{k8sdashboardshell}}.sh"
    mode: 0755
- name: 2.2 Deploy dashboard
  shell: "{{k8sdashboardcmd}} {{k8s_install_home}}/addons/dashboard/"
- name: 2.3 Get dashboard token
  shell: "{{k8s_install_home}}/temp/{{k8sdashboardshell}}.sh"
  ignore_errors: yes
- name: 2.4 Fetch dashboard_login_token file from remote master
  fetch:
    src: "/etc/kubernetes/dashboard_login_token.txt"
    dest: "{{kipath}}/data/output{{sub_process_dir}}/cert/"
    mode: 0755
    flat: yes
  ignore_errors: yes


### 6.Deploy registry
- name: 6.1 Create docker-registry.yaml file
  template:
    src: "../templates/6.registry/docker-registry.yaml.j2"
    dest: "{{k8s_install_home}}/addons/registry/docker-registry.yaml"
- name: 6.2 Deploy registry
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig apply -f {{k8s_install_home}}/addons/registry/docker-registry.yaml"

### 3.Deploy metrics-server
- name: 3.1 Create metrics-server.yaml file
  template:
    src: "../templates/3.metrics-server/metrics-server-deployment.yaml.j2"
    dest: "{{k8s_install_home}}/addons/metrics-server/metrics-server-deployment.yaml"
- name: 3.2 Deploy metrics-server
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig apply -f {{k8s_install_home}}/addons/metrics-server/"
  ignore_errors: yes
- name: 3.3 Create metrics-server rbac
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig create clusterrolebinding the-boss --user system:anonymous --clusterrole cluster-admin"
  ignore_errors: yes

### 4.Deploy traefik
- name: 4.1 Create traefik.yaml file
  template:
    src: "../templates/4.traefik/{{item}}.j2"
    dest: "{{k8s_install_home}}/addons/traefik/{{item}}"
  with_items:
    - "traefik-ds.yaml"
    - "traefik-ui.yaml-{{k8sver}}"
- copy:
    src: "../templates/4.traefik/{{item}}"
    dest: "{{k8s_install_home}}/addons/traefik/{{item}}"
  with_items:
    - traefik-config.yaml
    - traefik-rbac.yaml
- name: 4.2 Deploy traefik
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig apply -f {{k8s_install_home}}/addons/traefik/"
  ignore_errors: yes

### 5.Deploy heapster
- name: 5.1 Create heapster.yaml file
  template:
    src: "../templates/5.heapster/heapster-Deployment.yaml.j2"
    dest: "{{k8s_install_home}}/addons/heapster/heapster-Deployment.yaml"
- copy:
    src: "../templates/5.heapster/{{item}}"
    dest: "{{k8s_install_home}}/addons/heapster/{{item}}"
  with_items:
    - heapster-rbac.yaml
    - heapster-ServiceAccount.yaml
    - heapster-svc.yaml
- name: 5.2 Deploy heapster
  shell: "/usr/sbin/kubectl --kubeconfig=/etc/kubernetes/ssl/kube-install.kubeconfig apply -f {{k8s_install_home}}/addons/heapster/"
  ignore_errors: yes



